summary(sentences)
str_length(sentences[2])
# Sort array by number of characters
sentences$numChar <- nchar(sentences)
sentences$numChar
sortedSentences <- sentences[order(-sentences$numChar)]
# Find 10 longest sentences
tenLongest <- sortedSentences[1:10]
tenLongest
tenLongest <- tenLongest[order(nwords(tenLongest))]
tenLongest
# Function to count number of words
nwords <- function(string, pseudo=F){
ifelse( pseudo,
pattern <- "\\S+",
pattern <- "[[:alpha:]]+"
)
str_count(string, pattern)
}
# Find number of words in each sentence (add to report)
for(i in 1:10){
print(nwords(tenLongest[i]))
sprintf("\n")
}
# Extract book from corpus
intro <- bookCorpus[1]
chapter1 <- bookCorpus[2]
chapter2 <- bookCorpus[3]
chapter3 <- bookCorpus[4]
chapter4 <- bookCorpus[5]
chapter5 <- bookCorpus[6]
chapter6 <- bookCorpus[7]
chapter7 <- bookCorpus[8]
chapter8 <- bookCorpus[9]
chapter9 <- bookCorpus[10]
chapter10 <- bookCorpus[11]
end <- bookCorpus[12]
# Create document term matrix for bookCorpus (rows are documents, terms are words)
bookDTM <- DocumentTermMatrix(bookCorpus)
# Shows non sparse entries, sparsity, maximum term length etc.
# 12 documents, 6385 terms, Non-/sparse entries: 10488/66132
# Sparsity: 86 %
# Maximal Term Length: 30
# Weighting: term frequency(tf)
bookDTM
bookDTM$dimnames
bookDTM$dimnames$Terms
bookDTM$dimnames$Docs
x1DTM <- DocumentTermMatrix(x1)
x1DTM$dimnames$Terms
x1DTM$dimnames$Terms[1]
x1DTM$dimnames$Terms[943]
x1DTM$dimnames$Terms[1,943]
inspect(x1DTM$dimnames$Terms)
str(x1DTM$dimnames$Terms)
length(x1DTM$dimnames$Terms)
x1DTM <- DocumentTermMatrix(x1)
x1DTM
x1DTM$dimnames$Terms[944]
x1DTM$dimnames$Terms[943]
x1DTM$dimnames$Terms[942]
ch1Words <- x1DTM$dimnames$Terms
ch1Words
ch1NumWords <- length(x1DTM$dimnames$Terms)
ch1NumWords
maxWord <- ch1NumWords[1]
maxWord
maxWord <- ch1Words[1]
maxWord
maxWord
print(maxWord)
str(maxWord)
nchar(maxWord)
ch1NumWords
# Longest word
# Extract words
x1DTM <- DocumentTermMatrix(x1)
ch1Words <- x1DTM$dimnames$Terms
ch1Words
ch1NumWords <- length(x1DTM$dimnames$Terms)
ch1NumWords
maxWordLength <- 0
maxWordCh1 <- "max"
for(i in 1:ch1NumWords){
if(nchar(ch1Words[i] > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
print(maxWordCh1)
print(maxWordLength)
for(i in 1:ch1NumWords){
print(i)
fprintf("\n")
if(nchar(ch1Words[i] > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
for(i in 1:ch1NumWords){
print(i)
sprintf("\n")
if(nchar(ch1Words[i] > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
for(i in 1:ch1NumWords){
print(i)
sprintf("\n")
print("Length: ")
print(nchar(ch1Words[1]))
if(nchar(ch1Words[i] > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
ch1NumWords
for(i in 1:944){
print(i)
sprintf("\n")
print("Length: ")
print(nchar(ch1Words[1]))
if(nchar(ch1Words[i] > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
for(i in 1:ch1NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch1Words[1]))
if(nchar(ch1Words[i] > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
for(i in 1:ch1NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch1Words[i]))
if(nchar(ch1Words[i] > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
for(i in 1:ch1NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch1Words[i]))
if(nchar(ch1Words[i]) > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
for(i in 1:ch1NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch1Words[i]))
if((nchar(ch1Words[i]) > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
print(maxWordLength)
print(maxWordCh1)
print(maxWordLength)
print(maxWordCh2)
# Chapter 1
# Get lines from Chapter 1
ch1Lines <- read_lines("text/Chapter01.txt", skip = 0, n_max = -1L)
# Convert text to sentences
ch1Sentences <- convert_text_to_sentences(ch1Lines)
# Sort array by number of characters
ch1Sentences$numChar <- nchar(ch1Sentences)
ch1SortedSentences <- sentences[order(ch1Sentences$numChar)]
# Find longest sentence
ch1Longest <-ch1SortedSentences[1]
# Length of longest sentence
str_length(ch1Longest)
# Number of words in longest sentence
nwords(ch1Longest)
# Find shortest Sentence
ch1Shortest <- ch1SortedSentences[108]
# Length of shortest sentence
str_length(ch1Shortest)
# Number of words in shortest sentence
nwords(ch1Shortest)
# Longest word
# Extract words
x1DTM <- DocumentTermMatrix(x1)
ch1Words <- x1DTM$dimnames$Terms
ch1NumWords <- length(x1DTM$dimnames$Terms)
maxWordLength <- 0
maxWordCh1 <- "max"
for(i in 1:ch1NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch1Words[i]))
if((nchar(ch1Words[i]) > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
print(maxWordLength)
print(maxWordCh1)
# Chapter 2
# Longest Word
# Longest Sentence
# Get lines from Chapter 2
ch2Lines <- read_lines("text/Chapter02.txt", skip = 0, n_max = -1L)
ch2Lines
# Chapter 2
# Longest Word
# Longest Sentence
# Get lines from Chapter 2
ch2Lines <- read_lines("text/Chapter02.txt", skip = 0, n_max = -1L)
# Convert text to sentences
ch2Sentences <- convert_text_to_sentences(ch2Lines)
str(ch2Sentences)
# Sort array by number of characters
ch2Sentences$numChar <- nchar(ch2Sentences)
ch2Sentences$numChar
ch2SortedSentences <- sentences[order(ch2Sentences$numChar)]
# Find longest sentence
ch2Longest <-ch1SortedSentences[2]
ch2Longest
# Length of longest sentence
str_length(ch2Longest)
# Number of words in longest sentence
nwords(ch2Longest)
# Find shortest Sentence
ch2Shortest <- ch2SortedSentences[108]
ch2Shortest
# Length of shortest sentence
str_length(ch2Shortest)
# Number of words in shortest sentence
nwords(ch2Shortest)
# Longest word
# Extract words
x2DTM <- DocumentTermMatrix(x2)
ch2Words <- x2DTM$dimnames$Terms
ch2Words
ch2NumWords <- length(x2DTM$dimnames$Terms)
ch2NumWords
maxWordLength2 <- 0
maxWordCh2 <- "max"
for(i in 1:ch2NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch2Words[i]))
if((nchar(ch2Words[i]) > maxWordLength)){
maxWordLength <- nchar(ch2Words[i])
maxWordCh2 <- ch2Words[i]
}
}
print(maxWordLength)
print(maxWordCh2)
# Chapter 2
# Longest Word
# Longest Sentence
# Get lines from Chapter 2
ch2Lines <- read_lines("text/Chapter02.txt", skip = 0, n_max = -1L)
ch2Lines
# Convert text to sentences
ch2Sentences <- convert_text_to_sentences(ch2Lines)
str(ch2Sentences)
# Sort array by number of characters
ch2Sentences$numChar <- nchar(ch2Sentences)
# 1d. Prior to removing the punctuation, find the longest word and longest sentences
# in each chapter. Print a table of the length of the shortest and longest sentences
# in each chapter
# Chapter 1
# Get lines from Chapter 1
ch1Lines <- read_lines("text/Chapter01.txt", skip = 0, n_max = -1L)
# Convert text to sentences
ch1Sentences <- convert_text_to_sentences(ch1Lines)
# Sort array by number of characters
ch1Sentences$numChar <- nchar(ch1Sentences)
ch1SortedSentences <- sentences[order(ch1Sentences$numChar)]
# Find longest sentence
ch1Longest <-ch1SortedSentences[1]
# Length of longest sentence
str_length(ch1Longest)
# Number of words in longest sentence
nwords(ch1Longest)
# Find shortest Sentence
ch1Shortest <- ch1SortedSentences[108]
# Number of words in longest sentence
nwords(ch1Longest)
ch1SortedSentences <- sentences[order(ch1Sentences$numChar)]
ch1SortedSentences
# Find longest sentence
ch1Longest <-ch1SortedSentences[1]
# Length of longest sentence
str_length(ch1Longest)
# Number of words in longest sentence
nwords(ch1Longest)
# Find shortest Sentence
ch1Shortest <- ch1SortedSentences[108]
# Length of shortest sentence
str_length(ch1Shortest)
# Number of words in shortest sentence
nwords(ch1Shortest)
# Longest word
# Extract words
x1DTM <- DocumentTermMatrix(x1)
ch1Words <- x1DTM$dimnames$Terms
ch1NumWords <- length(x1DTM$dimnames$Terms)
maxWordLength <- 0
maxWordCh1 <- "max"
for(i in 1:ch1NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch1Words[i]))
if((nchar(ch1Words[i]) > maxWordLength)){
maxWordLength <- nchar(ch1Words[i])
maxWordCh1 <- ch1Words[i]
}
}
print(maxWordLength)
print(maxWordCh1)
# Chapter 2
# Longest Word
# Longest Sentence
# Get lines from Chapter 2
ch2Lines <- read_lines("text/Chapter02.txt", skip = 0, n_max = -1L)
# Convert text to sentences
ch2Sentences <- convert_text_to_sentences(ch2Lines)
str(ch2Sentences)
# Sort array by number of characters
ch2Sentences$numChar <- nchar(ch2Sentences)
ch2Sentences$numChar
ch2SortedSentences <- sentences[order(ch2Sentences$numChar)]
# Find longest sentence
ch2Longest <-ch1SortedSentences[1]
# Find longest sentence
ch2Longest <-ch2SortedSentences[1]
ch2Longest
# Length of longest sentence
str_length(ch2Longest)
# Number of words in longest sentence
nwords(ch2Longest)
# Find shortest Sentence
ch2Shortest <- ch2SortedSentences[108]
ch2Shortest
# Length of shortest sentence
str_length(ch2Shortest)
# Number of words in shortest sentence
nwords(ch2Shortest)
# Longest word
# Extract words
x2DTM <- DocumentTermMatrix(x2)
ch2Words <- x2DTM$dimnames$Terms
ch2Words
ch2NumWords <- length(x2DTM$dimnames$Terms)
ch2NumWords
maxWordLength2 <- 0
maxWordCh2 <- "max"
for(i in 1:ch2NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch2Words[i]))
if((nchar(ch2Words[i]) > maxWordLength)){
maxWordLength <- nchar(ch2Words[i])
maxWordCh2 <- ch2Words[i]
}
}
print(maxWordLength)
print(maxWordCh2)
maxWordLength2 <- 0
maxWordCh2 <- "max"
for(i in 1:ch2NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch2Words[i]))
if((nchar(ch2Words[i]) > maxWordLength2)){
maxWordLength <- nchar(ch2Words[i])
maxWordCh2 <- ch2Words[i]
}
}
print(maxWordLength)
print(maxWordCh2)
for(i in 1:ch2NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch2Words[i]))
if((nchar(ch2Words[i]) > maxWordLength2)){
maxWordLength2 <- nchar(ch2Words[i])
maxWordCh2 <- ch2Words[i]
}
}
print(maxWordLength)
print(maxWordCh2)
for(i in 1:ch2NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch2Words[i]))
if((nchar(ch2Words[i]) > maxWordLength2)){
maxWordLength2 <- nchar(ch2Words[i])
maxWordCh2 <- ch2Words[i]
}
}
print(maxWordLength2)
print(maxWordCh2)
# Chapter 3
# Longest Word
# Longest Sentence
# Get lines from Chapter 3
ch3Lines <- read_lines("text/Chapter03.txt", skip = 0, n_max = -1L)
ch3Lines
# Convert text to sentences
ch3Sentences <- convert_text_to_sentences(ch3Lines)
str(ch3Sentences)
# Sort array by number of characters
ch3Sentences$numChar <- nchar(ch3Sentences)
ch3Sentences$numChar
ch2SortedSentences
# Find shortest Sentence
ch2Shortest <- ch2SortedSentences[136]
ch2Shortest
# Length of shortest sentence
str_length(ch2Shortest)
# Find longest sentence
ch2Longest <-ch2SortedSentences[1]
ch2Longest
# Length of longest sentence
str_length(ch2Longest)
ch2SortedSentences <- sentences[order(-ch2Sentences$numChar)]
ch2SortedSentences
# Find longest sentence
ch2Longest <-ch2SortedSentences[1]
ch2Longest
# Length of longest sentence
str_length(ch2Longest)
# Number of words in longest sentence
nwords(ch2Longest)
# Find shortest Sentence
ch2Shortest <- ch2SortedSentences[136]
ch2Shortest
# Find shortest Sentence
ch2Shortest <- ch2SortedSentences[136]
ch2Shortest
# Length of shortest sentence
str_length(ch2Shortest)
# Number of words in shortest sentence
nwords(ch2Shortest)
# Longest word
# Extract words
x2DTM <- DocumentTermMatrix(x2)
ch2Words <- x2DTM$dimnames$Terms
ch2Words
ch2NumWords <- length(x2DTM$dimnames$Terms)
ch2NumWords
maxWordLength2 <- 0
maxWordCh2 <- "max"
for(i in 1:ch2NumWords){
print(i)
sprintf("\n")
print("Length:")
print(nchar(ch2Words[i]))
if((nchar(ch2Words[i]) > maxWordLength2)){
maxWordLength2 <- nchar(ch2Words[i])
maxWordCh2 <- ch2Words[i]
}
}
print(maxWordLength2)
# 1d. Prior to removing the punctuation, find the longest word and longest sentences
# in each chapter. Print a table of the length of the shortest and longest sentences
# in each chapter
# Chapter 1
# Get lines from Chapter 1
ch1Lines <- read_lines("text/Chapter01.txt", skip = 0, n_max = -1L)
# Convert text to sentences
ch1Sentences <- convert_text_to_sentences(ch1Lines)
# Sort array by number of characters
ch1Sentences$numChar <- nchar(ch1Sentences)
ch1SortedSentences <- sentences[order(ch1Sentences$numChar)]
ch1SortedSentences
# Find longest sentence
ch1Longest <-ch1SortedSentences[1]
# Length of longest sentence
str_length(ch1Longest)
ch1Longest
# Length of longest sentence
str_length(ch1Longest)
# Number of words in longest sentence
nwords(ch1Longest)
# Length of longest sentence
str_length(ch1Longest)
# Number of words in longest sentence
nwords(ch1Longest)
# Find shortest Sentence
ch1Shortest <- ch1SortedSentences[108]
# Length of shortest sentence
str_length(ch1Shortest)
ch1Shortest
# Length of shortest sentence
str_length(ch1Shortest)
# Number of words in shortest sentence
nwords(ch1Shortest)
